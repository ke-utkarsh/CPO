package ymsli.com.cpo.ui.view.activity

import android.app.Activity
import android.content.Intent
import android.graphics.Bitmap
import android.net.Uri
import android.os.Bundle
import android.view.View
import android.view.View.GONE
import android.view.View.VISIBLE
import android.webkit.JavascriptInterface
import android.webkit.WebView
import android.webkit.WebViewClient
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity
import com.google.android.gms.common.GooglePlayServicesNotAvailableException
import dagger.hilt.android.AndroidEntryPoint
import org.json.JSONObject
import ymsli.com.cpo.databinding.ActivityProfileBinding
import ymsli.com.cpo.databinding.ActivityWebviewBinding
import ymsli.com.cpo.utils.Constants
import kotlin.properties.Delegates

@AndroidEntryPoint
class WebViewActivity: AppCompatActivity() {
    private var activity: Activity =this@WebViewActivity
    private lateinit var mBinding:ActivityWebviewBinding
    private lateinit var url:String
    private lateinit var title:String
    lateinit var webView: WebView
    private var isJson: Boolean=false
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        mBinding = ActivityWebviewBinding.inflate(layoutInflater)
        setContentView(mBinding.root)
        supportActionBar?.hide()
        mBinding.webView.settings.builtInZoomControls=true
        mBinding.webView.settings.displayZoomControls=true
        init()
        onClickListener()
    }

    private fun onClickListener() {
        mBinding.btnBack.setOnClickListener {
            finish()
        }
        mBinding.tvOpenChrome.setOnClickListener {
            var browser: Intent = Intent(Intent.ACTION_VIEW, Uri.parse(url))
            startActivity(browser)
        }
    }

    private fun init() {
        var bundle :Bundle ?=intent.extras
        if(bundle!=null){
            title= intent.getStringExtra(Constants.WEBVIEW_TITLE).toString()
            mBinding.tvTitle.text = title
            url=intent.getStringExtra(Constants.URL).toString()
            mBinding.webView.webViewClient= WebViewClient()
            if(title.contains("Metadata",true)) {
                mBinding.webView.addJavascriptInterface(
                    MyJavaScriptInterface(mBinding.tvJsonText), "INTERFACE")
                mBinding.webView.visibility=GONE
                mBinding.svJsonText.visibility= VISIBLE
                mBinding.tvJsonText.visibility= VISIBLE
            }
            mBinding.webView.loadUrl(url)
            mBinding.webView.settings.javaScriptEnabled = true
            mBinding.webView.settings.setSupportZoom(true)
            mBinding.webView.isVerticalScrollBarEnabled = true;

        }
    }
    internal class MyJavaScriptInterface(private val tvJsonText: TextView) {
        @JavascriptInterface
        fun processContent(aContent: String) {
            val jsonObject = JSONObject(aContent)
            tvJsonText.post { tvJsonText.text = jsonObject.toString(4).replace("\\", "") }
        }
    }
    inner class WebViewClient : android.webkit.WebViewClient(){
        override fun onPageStarted(view: WebView?, url: String?, favicon: Bitmap?) {
            mBinding.progressBar.visibility=View.VISIBLE
        }
        override fun shouldOverrideUrlLoading(view: WebView, url: String?): Boolean {
            if (url != null) {
                view.loadUrl(url)
            }
            return false
        }

        override fun onPageFinished(view: WebView?, url: String?) {
            if(title.contains("Metadata",true)){
                view?.loadUrl("javascript:window.INTERFACE.processContent(document.getElementsByTagName('body')[0].innerText);")
            }
            mBinding.progressBar.visibility=View.GONE
        }
    }
}
