// Generated by data binding compiler. Do not edit!
package ymsli.com.cpo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import java.lang.Deprecated;
import java.lang.Object;
import ymsli.com.cpo.R;
import ymsli.com.cpo.data.model.ConcernedIssueModel;

public abstract class ListItemParentConcernedBinding extends ViewDataBinding {
  @NonNull
  public final CardView cardLickIssueImages;

  @NonNull
  public final ProgressBar concernedIssueImageProgress;

  @NonNull
  public final View divider;

  @NonNull
  public final EditText etIssue;

  @NonNull
  public final ImageView ivClickConcernedIssueImage;

  @NonNull
  public final ImageView ivDeleteIssue;

  @NonNull
  public final RecyclerView rvConcernedImages;

  @Bindable
  protected ConcernedIssueModel mItem;

  protected ListItemParentConcernedBinding(Object _bindingComponent, View _root,
      int _localFieldCount, CardView cardLickIssueImages, ProgressBar concernedIssueImageProgress,
      View divider, EditText etIssue, ImageView ivClickConcernedIssueImage, ImageView ivDeleteIssue,
      RecyclerView rvConcernedImages) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cardLickIssueImages = cardLickIssueImages;
    this.concernedIssueImageProgress = concernedIssueImageProgress;
    this.divider = divider;
    this.etIssue = etIssue;
    this.ivClickConcernedIssueImage = ivClickConcernedIssueImage;
    this.ivDeleteIssue = ivDeleteIssue;
    this.rvConcernedImages = rvConcernedImages;
  }

  public abstract void setItem(@Nullable ConcernedIssueModel item);

  @Nullable
  public ConcernedIssueModel getItem() {
    return mItem;
  }

  @NonNull
  public static ListItemParentConcernedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.list_item_parent_concerned, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ListItemParentConcernedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ListItemParentConcernedBinding>inflateInternal(inflater, R.layout.list_item_parent_concerned, root, attachToRoot, component);
  }

  @NonNull
  public static ListItemParentConcernedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.list_item_parent_concerned, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ListItemParentConcernedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ListItemParentConcernedBinding>inflateInternal(inflater, R.layout.list_item_parent_concerned, null, false, component);
  }

  public static ListItemParentConcernedBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ListItemParentConcernedBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (ListItemParentConcernedBinding)bind(component, view, R.layout.list_item_parent_concerned);
  }
}
