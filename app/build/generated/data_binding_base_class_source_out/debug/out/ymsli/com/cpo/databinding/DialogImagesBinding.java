// Generated by view binder compiler. Do not edit!
package ymsli.com.cpo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ymsli.com.cpo.R;

public final class DialogImagesBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView ivClose;

  @NonNull
  public final ImageView ivImage;

  @NonNull
  public final ProgressBar pbProgress;

  @NonNull
  public final TextView tvIpfs;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final View vwLine;

  private DialogImagesBinding(@NonNull CardView rootView, @NonNull ImageView ivClose,
      @NonNull ImageView ivImage, @NonNull ProgressBar pbProgress, @NonNull TextView tvIpfs,
      @NonNull TextView tvTitle, @NonNull View vwLine) {
    this.rootView = rootView;
    this.ivClose = ivClose;
    this.ivImage = ivImage;
    this.pbProgress = pbProgress;
    this.tvIpfs = tvIpfs;
    this.tvTitle = tvTitle;
    this.vwLine = vwLine;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogImagesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogImagesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_images, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogImagesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivClose;
      ImageView ivClose = ViewBindings.findChildViewById(rootView, id);
      if (ivClose == null) {
        break missingId;
      }

      id = R.id.ivImage;
      ImageView ivImage = ViewBindings.findChildViewById(rootView, id);
      if (ivImage == null) {
        break missingId;
      }

      id = R.id.pbProgress;
      ProgressBar pbProgress = ViewBindings.findChildViewById(rootView, id);
      if (pbProgress == null) {
        break missingId;
      }

      id = R.id.tvIpfs;
      TextView tvIpfs = ViewBindings.findChildViewById(rootView, id);
      if (tvIpfs == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.vwLine;
      View vwLine = ViewBindings.findChildViewById(rootView, id);
      if (vwLine == null) {
        break missingId;
      }

      return new DialogImagesBinding((CardView) rootView, ivClose, ivImage, pbProgress, tvIpfs,
          tvTitle, vwLine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
